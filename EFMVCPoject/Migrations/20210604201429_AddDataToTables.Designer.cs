// <auto-generated />
using EFMVCPoject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFMVCPoject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210604201429_AddDataToTables")]
    partial class AddDataToTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EFMVCPoject.Models.CustomerModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Riyadh",
                            Name = "Saud",
                            OrderID = 1
                        },
                        new
                        {
                            ID = 2,
                            Address = "Jeddah",
                            Name = "Mohammed",
                            OrderID = 2
                        },
                        new
                        {
                            ID = 3,
                            Address = "Dammam",
                            Name = "Khalid",
                            OrderID = 3
                        });
                });

            modelBuilder.Entity("EFMVCPoject.Models.OrderLineModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Subtotal")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderLines");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            OrderID = 1,
                            Quantity = 2,
                            Subtotal = 30
                        },
                        new
                        {
                            ID = 2,
                            OrderID = 2,
                            Quantity = 33,
                            Subtotal = 211
                        },
                        new
                        {
                            ID = 3,
                            OrderID = 3,
                            Quantity = 3,
                            Subtotal = 12
                        });
                });

            modelBuilder.Entity("EFMVCPoject.Models.OrderModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Total = 5
                        },
                        new
                        {
                            ID = 2,
                            Total = 13
                        },
                        new
                        {
                            ID = 3,
                            Total = 1
                        });
                });

            modelBuilder.Entity("EFMVCPoject.Models.ProductModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OrderLineID")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderLineID")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Mouse",
                            OrderLineID = 1,
                            Price = 13
                        },
                        new
                        {
                            ID = 2,
                            Name = "Keyboard",
                            OrderLineID = 2,
                            Price = 25
                        },
                        new
                        {
                            ID = 3,
                            Name = "Printer",
                            OrderLineID = 3,
                            Price = 7
                        });
                });

            modelBuilder.Entity("EFMVCPoject.Models.CustomerModel", b =>
                {
                    b.HasOne("EFMVCPoject.Models.OrderModel", "Order")
                        .WithOne("Customer")
                        .HasForeignKey("EFMVCPoject.Models.CustomerModel", "OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFMVCPoject.Models.OrderLineModel", b =>
                {
                    b.HasOne("EFMVCPoject.Models.OrderModel", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFMVCPoject.Models.ProductModel", b =>
                {
                    b.HasOne("EFMVCPoject.Models.OrderLineModel", "OrderLine")
                        .WithOne("Product")
                        .HasForeignKey("EFMVCPoject.Models.ProductModel", "OrderLineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
