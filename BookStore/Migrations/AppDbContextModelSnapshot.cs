// <auto-generated />
using System;
using BookStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BookStore.Models.AuthorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("About")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jane",
                            LastName = "Austen"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Leo",
                            LastName = "Tolstoy"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Virginia",
                            LastName = "Woolf"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Erich",
                            LastName = "Gamma"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Richard",
                            LastName = "Helm"
                        });
                });

            modelBuilder.Entity("BookStore.Models.BookAuthorsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthorsModel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            BookId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            BookId = 2
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            BookId = 3
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 3,
                            BookId = 4
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 4,
                            BookId = 5
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 5,
                            BookId = 5
                        });
                });

            modelBuilder.Entity("BookStore.Models.BookModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .HasColumnType("text");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Rating")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            ISBN = "0-9594-4480-7",
                            PublishedDate = new DateTime(1814, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublisherId = 1,
                            Rating = "8.7",
                            Title = "Northanger Abbey"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            ISBN = "0-2718-9125-4",
                            PublishedDate = new DateTime(1856, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublisherId = 3,
                            Rating = "9",
                            Title = "War and Peace"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            ISBN = "0-1732-8402-7",
                            PublishedDate = new DateTime(1875, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublisherId = 3,
                            Rating = "9",
                            Title = "Anna Karenina"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            ISBN = "0-2445-3536-1",
                            PublishedDate = new DateTime(1925, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublisherId = 4,
                            Rating = "5",
                            Title = "Mrs. Dalloway"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            ISBN = "0-4540-7260-0",
                            PublishedDate = new DateTime(1994, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublisherId = 4,
                            Rating = "9.2",
                            Title = "Design Patterns: Elements of Reusable Object-Oriented Software"
                        });
                });

            modelBuilder.Entity("BookStore.Models.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Education"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Literature & Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("BookStore.Models.PublisherModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Penguin Random House"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hachette Livre"
                        },
                        new
                        {
                            Id = 3,
                            Name = "HarperCollins"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Macmillan Publishers"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Simon & Schuster"
                        });
                });

            modelBuilder.Entity("BookStore.Models.BookAuthorsModel", b =>
                {
                    b.HasOne("BookStore.Models.AuthorModel", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Models.BookModel", "Book")
                        .WithMany("Authors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookStore.Models.BookModel", b =>
                {
                    b.HasOne("BookStore.Models.CategoryModel", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Models.PublisherModel", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
